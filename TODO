 Test::AutoBuild Todo
 ====================
 
In no particular order, here is a list of ideas for future
work on AutoBuild. If you have any other ideas join in the
discussions on the developers mailing list

  https://mail.gna.org/listinfo/testautobuild-devel
 
 * Tinderbox: Output module/stage to send status information 
   to Tinderbox server
 
 * Stages: Rewrite Autobuild.pm creating the concept of a
   'stage'. The AutoBuild.pm would just run all configured 
   stages in sequence. This allows for a much more configurable / 
   flexible build process. The current set of stages would be:
   
     Checkout -> Build -> Copy Packages -> Generate Status -> Send alerts
   
 * Config DB: Enable retrieval of build config from a server
   such as Tinderbox
 
 * Test: Stages for performing tests
 
 * UML: Integration with User Mode Linux to allow actual software
   build & installed to be performed within a UML session representing
   a pristine installed distribution.
   
 * Co-ordinated parallelisation: Allow multiple instances to be run
   on different machines each performing separate task. For example,
   one machine would perform builds. At end of each cycle this would
   notify a second instance to download the generated packages and
   then perform automated tests.

 * Automatic Depends: Extract dependancy information from package
   source rather than the master config file.
   
 * Split repositories: Allow a module to be split over several
   source control repositories. This would enable use of upstream
   for checking out pristine sources, augmenting it with a local
   source repository to add in the rollingbuild.sh file and an
   RPM spec file.

 * Script templates: Generic rollingbuild.sh scripts for use with
   common software build packages - for example generic scripts
   for use with AutoMake/AutoConf based modules, and for Perl
   MakeMaker modules.

 * Log split: Splitting of log files into multiple sections, eg
   configure, build, install, package to allow indentification of
   stage at which a module failed.

 * Incremental status: Generate incremental HTML status pages to
   allow current state of build process to be seen.

-- End 

